### Начало проэкта
mkdir performance_page && cd performance_page
pip install virtualenv
virtualenv venv
mkdir app && cd app
git init
git status
pip install gunicorn flask
python -c "import flask; print(flask.__version__)"

# Разработка приложения
vi main.py
vi wsgi.py
mkdir templates
vi templates/index.html
vi templates/base.html

# Запуск приложения
export FLASK_APP=main
export FLASK_ENV=development
flask run

# Создать репозиторий на GitHub
git remote add origin git@github.com:makotakara/performance_page.git
pip freeze > requirement.txt
vi .gitignore
git branch -M main
git add .
git commit -am "firts commit"
git push -u origin main

# Скачать новую версию проэкта
git pull origin

# Для разворачивания проэкта на другой сервере
# Зайти на серевер 
cd /home/app_user/project/
mkdir performance_page && cd performance_page
virtualenv venv
source venv/bin/activate
git clone https://github.com/makotakara/performance_page.git
mv performance_page app && cd app
pip install -r requirement.txt

# Создать unit
vi /etc/systemd/system/performance_page.service

##
[Unit]
Description=Gunicorn instance to serve performance_page
After=network.target

[Service]
User=app_user
Group=www-data
WorkingDirectory=/home/app_user/project/performance_page/app
Environment="PATH=/home/app_user/project/performance_page/venv/bin/"
ExecStart=/home/app_user/project/performance_page/venv/bin/gunicorn --bind 0.0.0.0:5000 wsgi:app 

[Install]
WantedBy=multi-user.target
##

systemctl daemon-reload
systemctl start performance_page.service
systemctl enable performance_page.service
systemctl status performance_page.service


